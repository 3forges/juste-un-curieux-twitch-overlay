---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ’¬</text></svg>" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link is:inline rel="stylesheet" href="themes/default.css" />
</head>
	<body>
<!-- INCLUDE CONFIG -->
	<script is:inline src="scripts/config.js"></script>
<!-- HANDLE ARGUMENTS CONFIG & THEME -->
	<script is:inline>
		// TRIE ARGV
		const loc = window.location.href
		let handledTheme = false
		if (loc.replace(/\?/,'') != loc) {	// HANDLE TEMPLATE FROM ARG
			const args = loc.substring(loc.lastIndexOf("?")+1, loc.length).split("&")
			args.map( (arg) => {
				if (arg.replace(/template/,'') != arg) {
					const theme = arg.split("=")[1]
					document.head.getElementsByTagName("link")[1].href = "themes/"+theme+".css"
					config.theme = theme
					handledTheme = true
					console.log("theme applied from argument", theme)
				}
			})
		}
		if (config.theme != "" && handledTheme == false) {	// HANDLE TEMPLATE FROM CONFIG
			document.head.getElementsByTagName("link")[1].href = "themes/"+config.theme+".css"
			console.log("theme applied from config", config.theme)
		}
		window.CONFIG = Object.freeze(config);
	</script>	
		<!-- 3rd PARTY -->	
	<script is:inline src="scripts/comfy.min.js"></script>
		<slot />
	</body>
</html>
<style is:global>
	
</style>
